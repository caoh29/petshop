// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  createdAt  DateTime  @default(now())
  firstName  String
  lastName   String
  address    String
  address2   String?
  city       String
  state      String
  zip        String
  country    String
  phone      String
  isAdmin    Boolean   @default(false)
  isVerified Boolean   @default(false)
  orders     Order[]
  reviews    Review[]
  cart       Cart?
  wishlist   Product[] @relation("UserWishlist")
}

model Order {
  id              String            @id @default(uuid())
  userId          String
  user            User              @relation(fields: [userId], references: [id])
  products        SelectedProduct[]
  total           Float
  createdAt       DateTime          @default(now())
  status          String
  shippingAddress String
  billingAddress  String
  paymentMethod   String
  shippingMethod  String
  trackingNumber  String
}

model Review {
  id        String   @id @default(uuid())
  rating    Float
  text      String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id               String            @id @default(uuid())
  sku              String
  image            String
  additionalImages String[]
  name             String
  price            Float
  category         String
  subcategory      String
  description      String
  reviews          Review[]
  sizes            String[]
  availableSizes   String[]
  colors           String[]
  availableColors  String[]
  stock            Int
  isOutOfStock     Boolean
  createdAt        DateTime          @default(now())
  wishedBy         User[]            @relation("UserWishlist")
  selectedProducts SelectedProduct[]
}

model SelectedProduct {
  id        String  @id @default(uuid())
  quantity  Int
  size      String?
  color     String?
  productId String
  product   Product @relation(fields: [productId], references: [id])
  orderId   String?
  order     Order?  @relation(fields: [orderId], references: [id])
  cartId    String?
  cart      Cart?   @relation(fields: [cartId], references: [id])
}

model Cart {
  id       String            @id @default(uuid())
  userId   String            @unique
  user     User              @relation(fields: [userId], references: [id])
  products SelectedProduct[]
}

model Category {
  id    String @id @default(uuid())
  name  String
  image String
}

model SubCategory {
  id    String @id @default(uuid())
  name  String
  image String
}
